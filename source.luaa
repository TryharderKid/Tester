local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local Library = {
    Theme = {
        Background = Color3.fromRGB(32, 34, 37),
        Accent = Color3.fromRGB(114, 137, 218),
        LightText = Color3.fromRGB(255, 255, 255),
        DarkText = Color3.fromRGB(185, 185, 185),
        DarkContrast = Color3.fromRGB(26, 27, 30),
        LightContrast = Color3.fromRGB(42, 44, 47),
        OutlineContrast = Color3.fromRGB(60, 60, 70)
    }
}

-- Utility Functions
local function CreateTween(instance, properties, duration)
    return TweenService:Create(
        instance,
        TweenInfo.new(duration or 0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
        properties
    )
end

local function AddCorners(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 4)
    corner.Parent = instance
    return corner
end

local function AddStroke(instance, thickness, transparency)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness or 1
    stroke.Transparency = transparency or 0
    stroke.Color = Library.Theme.OutlineContrast
    stroke.Parent = instance
    return stroke
end

function Library:CreateWindow(title)
    -- Main Window Setup
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "FluentUI"
    ScreenGui.Parent = CoreGui
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = Library.Theme.Background
    MainFrame.Parent = ScreenGui
    AddCorners(MainFrame, 8)
    AddStroke(MainFrame)

    -- Acrylic Effect
    local Acrylic = Instance.new("ImageLabel")
    Acrylic.BackgroundTransparency = 0.8
    Acrylic.Image = "rbxassetid://8992230677"
    Acrylic.ImageTransparency = 0.95
    Acrylic.ScaleType = Enum.ScaleType.Tile
    Acrylic.TileSize = UDim2.new(0, 128, 0, 128)
    Acrylic.Size = UDim2.new(1, 0, 1, 0)
    Acrylic.Parent = MainFrame
    AddCorners(Acrylic, 8)

    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Library.Theme.DarkContrast
    TopBar.Parent = MainFrame
    AddCorners(TopBar, 8)

    local Title = Instance.new("TextLabel")
    Title.Text = title
    Title.Size = UDim2.new(1, -30, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Library.Theme.LightText
    Title.TextSize = 14
    Title.Font = Enum.Font.GothamBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar

    -- Container Setup
    local Container = Instance.new("Frame")
    Container.Name = "Container"
    Container.Size = UDim2.new(1, -20, 1, -40)
    Container.Position = UDim2.new(0, 10, 0, 35)
    Container.BackgroundTransparency = 1
    Container.Parent = MainFrame

    -- Tab System
    local TabList = Instance.new("Frame")
    TabList.Name = "TabList"
    TabList.Size = UDim2.new(0, 120, 1, 0)
    TabList.BackgroundColor3 = Library.Theme.DarkContrast
    TabList.Parent = Container
    AddCorners(TabList, 6)

    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Padding = UDim.new(0, 5)
    TabListLayout.Parent = TabList

    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -130, 1, 0)
    ContentContainer.Position = UDim2.new(0, 130, 0, 0)
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.Parent = Container

    -- Window Functions
    local Window = {}
    Window.Tabs = {}
    Window.ActiveTab = nil

    -- Dragging Logic
    local dragging = false
    local dragInput
    local dragStart
    local startPos

    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)

    TopBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    -- Tab Creation
    function Window:AddTab(name)
        local Tab = {}
        
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Size = UDim2.new(1, -10, 0, 30)
        TabButton.Position = UDim2.new(0, 5, 0, #Window.Tabs * 35)
        TabButton.BackgroundColor3 = Library.Theme.LightContrast
        TabButton.Text = name
        TabButton.TextColor3 = Library.Theme.DarkText
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.GothamBold
        TabButton.Parent = TabList
        AddCorners(TabButton, 4)

        local TabPage = Instance.new("ScrollingFrame")
        TabPage.Name = name.."Page"
        TabPage.Size = UDim2.new(1, 0, 1, 0)
        TabPage.BackgroundTransparency = 1
        TabPage.BorderSizePixel = 0
        TabPage.ScrollBarThickness = 2
        TabPage.Visible = false
        TabPage.Parent = ContentContainer

        local TabPageLayout = Instance.new("UIListLayout")
        TabPageLayout.Padding = UDim.new(0, 5)
        TabPageLayout.Parent = TabPage

        -- Tab Selection Logic
        TabButton.MouseButton1Click:Connect(function()
            if Window.ActiveTab then
                Window.ActiveTab.Button.BackgroundColor3 = Library.Theme.LightContrast
                Window.ActiveTab.Button.TextColor3 = Library.Theme.DarkText
                Window.ActiveTab.Page.Visible = false
            end
            
            TabButton.BackgroundColor3 = Library.Theme.Accent
            TabButton.TextColor3 = Library.Theme.LightText
            TabPage.Visible = true
            Window.ActiveTab = {Button = TabButton, Page = TabPage}
        end)

        -- Element Creation Functions
        function Tab:AddButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -10, 0, 32)
            Button.BackgroundColor3 = Library.Theme.LightContrast
            Button.Text = text
            Button.TextColor3 = Library.Theme.LightText
            Button.TextSize = 14
            Button.Font = Enum.Font.GothamBold
            Button.Parent = TabPage
            AddCorners(Button, 4)

            Button.MouseButton1Click:Connect(function()
                callback()
                CreateTween(Button, {BackgroundColor3 = Library.Theme.Accent}):Play()
                wait(0.2)
                CreateTween(Button, {BackgroundColor3 = Library.Theme.LightContrast}):Play()
            end)

            return Button
        end

        function Tab:AddToggle(text, default, callback)
            local Toggle = Instance.new("Frame")
            Toggle.Size = UDim2.new(1, -10, 0, 32)
            Toggle.BackgroundColor3 = Library.Theme.LightContrast
            Toggle.Parent = TabPage
            AddCorners(Toggle, 4)

            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(1, 0, 1, 0)
            ToggleButton.BackgroundTransparency = 1
            ToggleButton.Text = text
            ToggleButton.TextColor3 = Library.Theme.LightText
            ToggleButton.TextSize = 14
            ToggleButton.Font = Enum.Font.GothamBold
            ToggleButton.Parent = Toggle

            local ToggleIndicator = Instance.new("Frame")
            ToggleIndicator.Size = UDim2.new(0, 40, 0, 20)
            ToggleIndicator.Position = UDim2.new(1, -45, 0.5, -10)
            ToggleIndicator.BackgroundColor3 = Library.Theme.DarkContrast
            ToggleIndicator.Parent = Toggle
            AddCorners(ToggleIndicator, 10)

            local Indicator = Instance.new("Frame")
            Indicator.Size = UDim2.new(0, 16, 0, 16)
            Indicator.Position = UDim2.new(0, 2, 0.5, -8)
            Indicator.BackgroundColor3 = Library.Theme.LightText
            Indicator.Parent = ToggleIndicator
            AddCorners(Indicator, 8)

            local enabled = default or false

            local function UpdateToggle()
                if enabled then
                    CreateTween(ToggleIndicator, {BackgroundColor3 = Library.Theme.Accent}):Play()
                    CreateTween(Indicator, {Position = UDim2.new(1, -18, 0.5, -8)}):Play()
                else
                    CreateTween(ToggleIndicator, {BackgroundColor3 = Library.Theme.DarkContrast}):Play()
                    CreateTween(Indicator, {Position = UDim2.new(0, 2, 0.5, -8)}):Play()
                end
            end

            UpdateToggle()

            ToggleButton.MouseButton1Click:Connect(function()
                enabled = not enabled
                UpdateToggle()
                callback(enabled)
            end)

            return Toggle
        end

        table.insert(Window.Tabs, Tab)
        if #Window.Tabs == 1 then
            TabButton.BackgroundColor3 = Library.Theme.Accent
            TabButton.TextColor3 = Library.Theme.LightText
            TabPage.Visible = true
            Window.ActiveTab = {Button = TabButton, Page = TabPage}
        end

        return Tab
    end

    return Window
end

return Library
